
# Documentation d'impl√©mentation du script de monitoring VPN

## üìã Pr√©requis

- Syst√®me Linux avec systemd
- OpenVPN 3
- Acc√®s sudo
- Compte Gotify (optionnel)

## üöÄ √âtapes d'installation

### 1. Cr√©ation du script

```bash
sudo nano /usr/local/bin/vpn-monitor.sh
```

Collez le contenu du script pr√©c√©dent et remplacez :
- `GOTIFY_TOKEN` par votre token
- Ajustez le nom du service VPN si n√©cessaire

### 2. Rendre le script ex√©cutable

```bash
sudo chmod +x /usr/local/bin/vpn-monitor.sh
```

### 3. Cr√©ation des fichiers systemd

#### Fichier de service

```bash
sudo nano /etc/systemd/system/vpn-monitor.service
```

```ini
[Unit]
Description=VPN Monitoring Service
After=network.target

[Service]
Type=oneshot
ExecStart=/usr/local/bin/vpn-monitor.sh
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
```

#### Fichier timer

```bash
sudo nano /etc/systemd/system/vpn-monitor.timer
```

```ini
[Unit]
Description=VPN Monitoring Timer

[Timer]
OnCalendar=*:0/5
Persistent=true

[Install]
WantedBy=timers.target
```

### 4. Activation et d√©marrage

```bash
# Recharger la configuration systemd
sudo systemctl daemon-reload

# Activer le timer
sudo systemctl enable vpn-monitor.timer

# D√©marrer le timer
sudo systemctl start vpn-monitor.timer
```

## üîç V√©rification

### Statut du timer

```bash
sudo systemctl status vpn-monitor.timer
```

### Logs

```bash
# Logs systemd
journalctl -u vpn-monitor.service

# Logs du script
tail -f /var/log/vpn_monitor_script.log
```

## üõ† Personnalisation

### Modification de la fr√©quence

Dans le fichier `.timer`, modifiez `OnCalendar=*:0/5` :
- `*:0/5` : toutes les 5 minutes
- `*:0/10` : toutes les 10 minutes
- `*-*-* 06:00:00` : une fois par jour √† 6h

## üêû D√©pannage

### Probl√®mes courants

1. **Permissions**
   - Assurez-vous que le script est ex√©cutable
   - V√©rifiez les droits d'acc√®s aux fichiers

2. **Notifications Gotify**
   - V√©rifiez le token
   - Assurez-vous que l'URL est correcte
   - Testez manuellement avec curl

3. **Service VPN**
   - V√©rifiez le nom exact du service
   - Confirmez que le service existe

### Test manuel

```bash
# Ex√©cution manuelle du script
sudo /usr/local/bin/vpn-monitor.sh

# V√©rification des erreurs
echo $?
```

## üîí S√©curit√©

- Limitez les permissions du script
- Prot√©gez le fichier de log
- Utilisez des tokens s√©curis√©s pour Gotify

```bash
# Permissions recommand√©es
sudo chown root:root /usr/local/bin/vpn-monitor.sh
sudo chmod 750 /usr/local/bin/vpn-monitor.sh
```

## üîß Maintenance

- Mettez √† jour r√©guli√®rement le script
- Surveillez les logs
- Ajustez la configuration selon vos besoins

## üì¶ Annexes

### Variables configurables

- `LOG_FILE` : Chemin du fichier de log
- `GOTIFY_URL` : URL du serveur Gotify
- `GOTIFY_TOKEN` : Token d'authentification
- `VPN_SERVICE` : Nom du service VPN

## üí° Conseils avanc√©s

- Consid√©rez une redondance VPN
- Mettez en place des alertes sur plusieurs canaux
- Automatisez les mises √† jour du script

## üìù Exemple de script complet

```bash
#!/bin/bash

# Configuration
LOG_FILE="/var/log/vpn_monitor_script.log"
GOTIFY_URL="https://gotify.example.com/message"
GOTIFY_TOKEN="your_token_here"
VPN_SERVICE="openvpn3-session@wetterland.service"

# Reste du script (comme dans l'exemple pr√©c√©dent)
...
```

---

**Note**: Cette documentation est un guide g√©n√©rique. Adaptez-la √† votre environnement sp√©cifique.